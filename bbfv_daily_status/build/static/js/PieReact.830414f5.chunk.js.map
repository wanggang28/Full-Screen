{"version":3,"sources":["../static/js/PieReact.830414f5.chunk.js","EchartsDemo/PieReact.js","../node_modules/echarts/lib/component/axisPointer/modelHelper.js","../node_modules/echarts/lib/component/axis/AxisBuilder.js","../node_modules/echarts/lib/component/axis/AxisView.js","../node_modules/echarts/lib/component/axisPointer.js","../node_modules/echarts/lib/component/axisPointer/viewHelper.js","../node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","../node_modules/echarts/lib/component/axisPointer/globalListener.js","../node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","../node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","../node_modules/echarts/lib/chart/helper/createListSimply.js","../node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","../node_modules/echarts/lib/component/tooltip.js","../node_modules/echarts/lib/component/axisPointer/axisTrigger.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","../node_modules/echarts/lib/component/tooltip/TooltipModel.js","../node_modules/echarts/lib/component/tooltip/TooltipView.js","../node_modules/echarts/lib/component/tooltip/TooltipContent.js","../node_modules/echarts/lib/processor/dataFilter.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","../node_modules/echarts/lib/component/helper/listComponent.js","../node_modules/echarts/lib/visual/dataColor.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/helper/selectableMixin.js","../node_modules/echarts/lib/action/createDataSelectAction.js","../node_modules/echarts/lib/chart/pie.js","../node_modules/echarts/lib/chart/pie/PieSeries.js","../node_modules/echarts/lib/chart/pie/PieView.js","../node_modules/echarts/lib/chart/pie/pieLayout.js","../node_modules/echarts/lib/chart/pie/labelLayout.js"],"names":["webpackJsonp","174","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default","__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__","__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__","__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","PieReact","_React$Component","this","_this","getPrototypeOf","initPie","bind","_props$option","option","undefined","myChart","a","init","ID","setOption","window","onresize","resize","_this2","_props","_props$width","width","_props$height","height","createElement","ref","style","Component","181","exports","collect","ecModel","api","result","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","getComponent","globalAxisPointerModel","linksOption","get","linkGroups","each","getCoordinateSystems","coordSys","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axis","axisPointerModel","model","getModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","type","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","curry","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","zrUtil","clone","labelOption","label","show","tooltipAxisPointerLabelShow","crossStyle","lineStyle","defaults","textStyle","Model","eachSeries","seriesModel","coordinateSystem","seriesTooltipTrigger","seriesTooltipShow","getAxis","dim","push","seriesDataCount","getData","count","axisModel","linkOption","checkPropInLink","id","componentIndex","name","linkPropValue","axisPropValue","isArray","indexOf","fixValue","getAxisInfo","scale","status","parse","extent","getExtent","slice","reverse","isBlank","getAxisPointerModel","182","makeAxisEventDataBase","eventData","componentType","mainType","endTextLayout","opt","textPosition","textRotate","textAlign","textVerticalAlign","rotationDiff","remRadian","rotation","inverse","onLeft","isRadianAroundZero","PI","isSilent","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","el","ignore","current","next","labelLayout","firstRect","getBoundingRect","nextRect","mRotationBack","matrixUtil","identity","rotate","applyTransform","mul","getLocalTransform","intersect","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","ticksCoords","getTicksCoords","pt1","pt2","matrix","_transform","tickCoord","coord","tickDirection","v2ApplyTransform","tickEl","graphic","Line","subPixelOptimizeLine","anid","tickValue","shape","x1","y1","x2","y2","getLineStyle","stroke","z2","silent","group","add","buildAxisLabel","retrieve","axisLabelShow","labelModel","labelMargin","labels","getViewLabels","labelRotation","labelRotate","innerTextLayout","labelDirection","rawCategoryData","getCategories","triggerEvent","labelItem","index","formattedLabel","rawLabel","itemLabelModel","textColor","getTextColor","dataToCoord","pos","labelOffset","textEl","Text","position","setTextStyle","text","getShallow","textFill","targetType","_dumbGroup","updateTransform","decomposeTransform","_util","extend","formatUtil","_number","_symbol","createSymbol","_vector","Math","AxisBuilder","nameDirection","Group","dumbGroup","transform","hasBuilder","builders","getGroup","axisLine","lineCap","strokeContainThreshold","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","offset","r","sqrt","point","symbol","cos","sin","attr","axisTickLabel","axisName","textStyleModel","gap","gapSignal","nameRotation","axisNameAvailableWidth","abs","isFinite","textFont","getFont","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","truncatedText","truncateText","minChar","placeholder","formatterParams","$vars","__fullText","__truncatedText","tooltip","content","formatter","axisRotation","textRotation","direction","_default","183","updateAxisPointer","axisView","payload","forceRender","Clazz","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","render","disposeAxisPointer","axisPointer","dispose","_config","echarts","__DEV__","extendComponentView","superApply","arguments","force","remove","axisPointerClazz","registerAxisPointerClass","clazz","184","axisTrigger","registerPreprocessor","link","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","registerAction","event","update","185","buildElStyle","axisPointerType","styleModel","fill","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","precision","paddings","normalizeCssArray","font","textRect","textContain","align","verticalAlign","confineInContainer","bgColor","x","y","lineWidth","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","viewWidth","getWidth","viewHeight","getHeight","min","max","seriesDataIndices","getLabel","params","axisHelper","getAxisRawValue","seriesData","idxItem","series","getSeriesByIndex","seriesIndex","dataIndex","dataIndexInside","dataParams","getDataParams","isString","replace","isFunction","getTransformedPosition","layoutInfo","translate","buildCartesianSingleLabelElOption","textLayout","makeLineShape","p1","p2","xDimIndex","makeRectShape","xy","wh","makeSectorShape","cx","cy","r0","startAngle","endAngle","clockwise","186","finder","data","modelUtil","queryDataIndex","getItemGraphicEl","getTooltipPosition","dataToPoint","getValues","map","dimensions","mapDimension","rect","187","register","handler","env","node","zr","getZr","inner","records","initGlobalListeners","useHandler","eventType","cb","on","e","dis","makeDispatchAction","record","dispatchAction","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","unregister","_model","makeInner","189","getCartesian","grid","getAxisDimIndex","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","otherExtent","getOtherAxis","getGlobalExtent","pixelValue","toGlobalCoord","elStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","layout","getHandleTransform","labelInside","updateHandleTransform","delta","axisExtent","dimIndex","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","tooltipOption","line","targetShape","shadow","bandWidth","getBandWidth","span","190","gridModel","otherAxisOnZeroOf","getAxesOnZeroOf","rawAxisPosition","axisPosition","axisDim","getRect","rectBound","idx","left","right","top","bottom","onZero","axisOffset","posBound","onZeroCoord","dirMap","192","nameList","coordDimensions","source","getSource","dimensionsInfo","createDimensions","list","List","initData","194","updateProps","animationModel","moveAnimation","propsEqual","lastProp","stopAnimation","lastProps","newProps","isObject","equals","item","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","z","zlevel","traverse","clazzUtil","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","_api","handle","hide","clear","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","animation","isCategoryAxis","useSnap","pointerEl","Rect","setStyle","handleModel","isInit","createIcon","cursor","draggable","onmousemove","stop","onmousedown","_onHandleDragMove","drift","ondragend","_onHandleDragEnd","includeStyles","getItemStyle","handleSize","createOrUpdate","_moveHandleToValue","dx","dy","_doDispatchAxisPointer","payloadInfo","axisIndex","doClear","buildLabel","enableClassExtend","195","201","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","containPoint","inputAxisInfo","findInputAxisInfo","val","pointToData","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","containData","buildPayloadsBySeries","payloadBatch","snapToValue","minDist","Number","MAX_VALUE","minDiff","seriesNestestValue","dataIndices","dataDim","getAxisTooltipData","nestestValue","indicesOfNearest","diff","dist","getRawIndex","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisType","axisId","valueLabelOpt","outputAxesInfo","valItem","sampleItem","escapeConnect","lastHighlights","newHighlights","batchItem","toHighlight","toDownplay","batch","isNaN","202","AxisPointerModel","extendComponentModel","defaultOption","triggerOn","animationDurationUpdate","color","shadowStyle","margin","padding","backgroundColor","borderColor","borderWidth","icon","size","throttle","203","globalListener","AxisPointerView","offsetX","offsetY","204","dependencies","showContent","trigger","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","borderRadius","extraCssText","animationEasingUpdate","fontSize","205","buildTooltipModel","modelCascade","resultModel","pop","isInstance","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","clientWidth","clientHeight","document","defaultView","getComputedStyle","stl","parseInt","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","TooltipContent","numberUtil","layoutUtil","axisPointerViewHelper","parsePercent","proxyRect","tooltipContent","getDom","_tooltipContent","tooltipModel","wxa","removeAll","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","clearTimeout","_refreshUpdateTimeout","setTimeout","manuallyShowTip","from","uid","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","hideLater","getItemModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","delay","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","formatTooltip","firstLine","encodeHTML","join","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","random","dataModel","dataType","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","formatTpl","callback","cbTicket","setContent","getSize","vAlign","viewSize","layoutRect","getLayoutRect","moveTo","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","j","newIdxItem","206","assembleTransition","duration","transitionText","vendors","vendorPrefix","assembleFont","cssText","round","assembleCssText","canvasSupported","zrColor","toHex","borderName","camelCase","toCamelCase","container","_zr","_x","_y","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","normalizeEvent","dispatch","onmouseleave","_hideDelay","currentStyle","domStyle","display","innerHTML","viewportRootOffset","painter","getViewportRootOffset","offsetLeft","offsetTop","time","isShow","207","seriesType","reset","legendModels","findComponents","filterSelf","getName","isSelected","209","legendFilter","registerSubTypeDefaulter","210","isNameSpecified","LegendModel","layoutMode","ignoreSize","parentModel","mergeDefaultAndTheme","selected","mergeOption","superCall","optionUpdated","_updateData","legendData","_data","hasSelected","select","potentialData","availableNames","eachRawSeries","seriesName","isPotential","legendDataProvider","names","mapArray","isSeriesFiltered","concat","_availableNames","rawData","dataItem","unSelect","toggleSelected","hasOwnProperty","orient","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","211","dispatchSelectAction","dispatchHighlightAction","dataName","excludeSeriesId","storage","getDisplayList","useHoverLayer","dispatchDownplayAction","_listComponent","makeBackground","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","positionInfo","getBoxLayoutParams","viewportSize","maxSize","mainRect","layoutInner","contentGroup","legendDrawnMap","createHashMap","selectMode","itemModel","newline","getSeriesByName","getVisual","legendSymbolType","symbolType","itemGroup","_createItem","set","indexOfName","getItemVisual","symbolKeepAspect","itemIcon","legendGlobalTooltipModel","textX","hitRect","invisible","legendIndex","eachChild","child","setHoverStyle","__legendDataIndex","box","contentRect","212","componentModel","boxLayoutParams","layoutBox","positionElement","_layout","213","getTargetSeries","paletteScope","seiresModelMap","eachSeriesByType","__paletteScope","dataAll","getRawData","idxMap","rawIdx","filteredIdx","singleDataColor","setItemVisual","getColorFromPalette","215","legendSelectActionHandler","methodName","selectedMap","isToggleSelect","eachComponent","isItemSelected","216","filterSeries","226","updateSelectedMap","targetList","_targetList","_selectTargetMap","reduce","targetMap","229","actionInfos","actionInfo","subType","query","method","231","createDataSelectAction","dataColor","pieLayout","dataFilter","registerVisual","registerLayout","232","createListSimply","getPercentWithPrecision","dataSelectableMixin","_dataProvider","retrieveRawAttr","PieSeries","extendSeriesModel","_createSelectableList","_defaultLabelLine","newOption","getInitialData","valueDim","len","valueList","percent","hostModel","defaultEmphasis","labelLineNormalOpt","labelLine","labelLineEmphasisOpt","emphasis","legendHoverLink","hoverAnimation","center","radius","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","length2","smooth","itemStyle","animationType","animationEasing","mixin","233","updateDataSelected","hasAnimation","seriesId","toggleItemSelected","getItemLayout","midAngle","animate","when","start","PiePiece","onEmphasis","polyline","hoverIgnore","onNormal","normalIgnore","sector","Sector","Polyline","updateData","ChartView","piePieceProto","firstCreate","animateTo","childAt","sectorShape","setShape","initProps","visualColor","useStyle","lineJoin","hoverStyle","cursorStyle","off","isAnimationEnabled","_updateLabel","labelText","points","linePoints","origin","labelHoverModel","labelLineModel","labelLineHoverModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","autoColor","useInsideStyle","inside","opacity","inherits","PieView","sectorGroup","_sectorGroup","oldData","isFirstRender","onSectorClick","piePiece","setItemGraphicEl","newIdx","oldIdx","execute","removeClipPath","setClipPath","_createClipPath","clipPath","itemLayout","234","RADIAN","validDataCount","sum","getSum","unitRadian","roseType","getDataExtent","restAngle","PI2","valueSumLargerThanMinAngle","currentAngle","dir","angle","setItemLayout","NaN","linearMap","235","adjustSingleSide","shiftUp","end","changeX","isDownList","lastDeltaX","l","deltaY","len2","deltaX","sort","b","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","textY","labelPosition","labelLineLen","labelLineLen2","isLabelInside","x3","y3","getFormattedLabel"],"mappings":"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","file":"static/js/PieReact.830414f5.chunk.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ 174:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__ = __webpack_require__(76);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__ = __webpack_require__(195);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__ = __webpack_require__(209);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__ = __webpack_require__(231);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**\r\n * Created by yongyuehuang on 2017/8/5.\r\n *///必须\nvar PieReact=function(_React$Component){_inherits(PieReact,_React$Component);function PieReact(props){_classCallCheck(this,PieReact);var _this=_possibleConstructorReturn(this,(PieReact.__proto__||Object.getPrototypeOf(PieReact)).call(this,props));_this.initPie=_this.initPie.bind(_this);return _this;}_createClass(PieReact,[{key:'initPie',value:function initPie(){var _props$option=this.props.option,option=_props$option===undefined?{}:_props$option;//外部传入的data数据\nvar myChart=__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a.init(this.ID);//初始化echarts\n//设置options\nmyChart.setOption(option);window.onresize=function(){//myChart.showLoading();\nmyChart.resize();};}},{key:'componentDidMount',value:function componentDidMount(){this.initPie();}},{key:'componentDidUpdate',value:function componentDidUpdate(){this.initPie();}},{key:'render',value:function render(){var _this2=this;var _props=this.props,_props$width=_props.width,width=_props$width===undefined?\"100%\":_props$width,_props$height=_props.height,height=_props$height===undefined?'200px':_props$height;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{ref:function ref(ID){return _this2.ID=ID;},style:{width:width,height:height}});}}]);return PieReact;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);/* harmony default export */ __webpack_exports__[\"default\"] = (PieReact);\n\n/***/ }),\n\n/***/ 181:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Model = __webpack_require__(12);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n\n/***/ 182:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(0);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(9);\n\nvar graphic = __webpack_require__(11);\n\nvar Model = __webpack_require__(12);\n\nvar _number = __webpack_require__(5);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(77);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(18);\n\nvar _vector = __webpack_require__(2);\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 183:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(6);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(76);\n\nvar axisPointerModelHelper = __webpack_require__(181);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 184:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(76);\n\nvar zrUtil = __webpack_require__(0);\n\nvar axisPointerModelHelper = __webpack_require__(181);\n\nvar axisTrigger = __webpack_require__(201);\n\n__webpack_require__(202);\n\n__webpack_require__(203);\n\n__webpack_require__(189);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n\n/***/ 185:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(11);\n\nvar textContain = __webpack_require__(14);\n\nvar formatUtil = __webpack_require__(9);\n\nvar matrix = __webpack_require__(18);\n\nvar axisHelper = __webpack_require__(30);\n\nvar AxisBuilder = __webpack_require__(182);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n\n/***/ 186:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar modelUtil = __webpack_require__(1);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 187:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar env = __webpack_require__(7);\n\nvar _model = __webpack_require__(1);\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n\n/***/ 189:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(11);\n\nvar BaseAxisPointer = __webpack_require__(194);\n\nvar viewHelper = __webpack_require__(185);\n\nvar cartesianAxisHelper = __webpack_require__(190);\n\nvar AxisView = __webpack_require__(183);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 190:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n\n/***/ 192:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createDimensions = __webpack_require__(45);\n\nvar List = __webpack_require__(41);\n\nvar _util = __webpack_require__(0);\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 194:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar clazzUtil = __webpack_require__(8);\n\nvar graphic = __webpack_require__(11);\n\nvar axisPointerModelHelper = __webpack_require__(181);\n\nvar eventTool = __webpack_require__(31);\n\nvar throttleUtil = __webpack_require__(43);\n\nvar _model = __webpack_require__(1);\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 195:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(76);\n\n__webpack_require__(184);\n\n__webpack_require__(204);\n\n__webpack_require__(205);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n\n/***/ 201:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar _model = __webpack_require__(1);\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = __webpack_require__(181);\n\nvar findPointFromSeries = __webpack_require__(186);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 202:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(76);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 203:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(76);\n\nvar globalListener = __webpack_require__(187);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 204:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(76);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 205:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(76);\n\nvar zrUtil = __webpack_require__(0);\n\nvar env = __webpack_require__(7);\n\nvar TooltipContent = __webpack_require__(206);\n\nvar formatUtil = __webpack_require__(9);\n\nvar numberUtil = __webpack_require__(5);\n\nvar graphic = __webpack_require__(11);\n\nvar findPointFromSeries = __webpack_require__(186);\n\nvar layoutUtil = __webpack_require__(29);\n\nvar Model = __webpack_require__(12);\n\nvar globalListener = __webpack_require__(187);\n\nvar axisHelper = __webpack_require__(30);\n\nvar axisPointerViewHelper = __webpack_require__(185);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 206:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar zrColor = __webpack_require__(19);\n\nvar eventUtil = __webpack_require__(31);\n\nvar env = __webpack_require__(7);\n\nvar formatUtil = __webpack_require__(9);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 207:\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 209:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(76);\n\n__webpack_require__(210);\n\n__webpack_require__(215);\n\n__webpack_require__(211);\n\nvar legendFilter = __webpack_require__(216);\n\nvar Component = __webpack_require__(13);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 210:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(76);\n\nvar zrUtil = __webpack_require__(0);\n\nvar Model = __webpack_require__(12);\n\nvar _model = __webpack_require__(1);\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 211:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(6);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(76);\n\nvar zrUtil = __webpack_require__(0);\n\nvar _symbol = __webpack_require__(77);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(11);\n\nvar _listComponent = __webpack_require__(212);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(29);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 212:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _layout = __webpack_require__(29);\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = __webpack_require__(9);\n\nvar graphic = __webpack_require__(11);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n/***/ }),\n\n/***/ 213:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(0);\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 215:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(76);\n\nvar zrUtil = __webpack_require__(0);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 216:\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 226:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 229:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(76);\n\nvar zrUtil = __webpack_require__(0);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 231:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(76);\n\nvar zrUtil = __webpack_require__(0);\n\n__webpack_require__(232);\n\n__webpack_require__(233);\n\nvar createDataSelectAction = __webpack_require__(229);\n\nvar dataColor = __webpack_require__(213);\n\nvar pieLayout = __webpack_require__(234);\n\nvar dataFilter = __webpack_require__(207);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));\n\n/***/ }),\n\n/***/ 232:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(76);\n\nvar createListSimply = __webpack_require__(192);\n\nvar zrUtil = __webpack_require__(0);\n\nvar modelUtil = __webpack_require__(1);\n\nvar _number = __webpack_require__(5);\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = __webpack_require__(226);\n\nvar _dataProvider = __webpack_require__(20);\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 233:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(11);\n\nvar ChartView = __webpack_require__(79);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 234:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = __webpack_require__(235);\n\nvar zrUtil = __webpack_require__(0);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 235:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(14);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/PieReact.830414f5.chunk.js","/**\r\n * Created by yongyuehuang on 2017/8/5.\r\n */\r\nimport React from 'react'\r\nimport echarts from 'echarts/lib/echarts' //必须\r\nimport 'echarts/lib/component/tooltip'\r\nimport 'echarts/lib/component/legend'\r\nimport 'echarts/lib/chart/pie'\r\n\r\nexport default class PieReact extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props)\r\n    this.initPie = this.initPie.bind(this)\r\n  }\r\n  \r\n  initPie() {\r\n    const { option={} } = this.props //外部传入的data数据\r\n    let myChart = echarts.init(this.ID) //初始化echarts\r\n    //设置options\r\n    myChart.setOption(option)\r\n    window.onresize = function() {\r\n      //myChart.showLoading();\r\n      myChart.resize()\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.initPie()\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    this.initPie()\r\n  }\r\n  \r\n  render() {\r\n    const { width=\"100%\", height = '200px' } = this.props\r\n    return <div ref={ID => this.ID = ID} style={{width, height}}></div>\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/EchartsDemo/PieReact.js","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 181\n// module chunks = 0 1 2 3 4 5","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisBuilder.js\n// module id = 182\n// module chunks = 0 1 2 3 4 5 6","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisView.js\n// module id = 183\n// module chunks = 0 1 2 3 4 5","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer.js\n// module id = 184\n// module chunks = 0 1 2 3 4 5","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 185\n// module chunks = 0 1 2 3 4 5","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 186\n// module chunks = 0 1 2 3 4 5","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/globalListener.js\n// module id = 187\n// module chunks = 0 1 2 3 4 5","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 189\n// module chunks = 0 1 2 3 4 5","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js\n// module id = 190\n// module chunks = 0 1 2 3 4 5","var createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createListSimply.js\n// module id = 192\n// module chunks = 0 1 2 5 6","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 194\n// module chunks = 0 1 2 3 4 5","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip.js\n// module id = 195\n// module chunks = 0 1 2 3 4 5","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 201\n// module chunks = 0 1 2 3 4 5","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 202\n// module chunks = 0 1 2 3 4 5","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 203\n// module chunks = 0 1 2 3 4 5","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 204\n// module chunks = 0 1 2 3 4 5","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipView.js\n// module id = 205\n// module chunks = 0 1 2 3 4 5","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 206\n// module chunks = 0 1 2 3 4 5","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataFilter.js\n// module id = 207\n// module chunks = 0 1 5 6","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 209\n// module chunks = 0 1 2 3 5","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 210\n// module chunks = 0 1 2 3 5","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 211\n// module chunks = 0 1 2 3 5","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/listComponent.js\n// module id = 212\n// module chunks = 0 1 2 3 5","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/dataColor.js\n// module id = 213\n// module chunks = 0 1 5 6","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 215\n// module chunks = 0 1 2 3 5","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 216\n// module chunks = 0 1 2 3 5","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/selectableMixin.js\n// module id = 226\n// module chunks = 0 1 5","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/createDataSelectAction.js\n// module id = 229\n// module chunks = 0 1 5","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie.js\n// module id = 231\n// module chunks = 0 1 5","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieSeries.js\n// module id = 232\n// module chunks = 0 1 5","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieView.js\n// module id = 233\n// module chunks = 0 1 5","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/pieLayout.js\n// module id = 234\n// module chunks = 0 1 5","var textContain = require(\"zrender/lib/contain/text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/labelLayout.js\n// module id = 235\n// module chunks = 0 1 5"],"sourceRoot":""}