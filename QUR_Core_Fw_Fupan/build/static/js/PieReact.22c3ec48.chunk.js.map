{"version":3,"sources":["../static/js/PieReact.22c3ec48.chunk.js","EchartsDemo/PieReact.js","../node_modules/echarts/lib/component/axisPointer/modelHelper.js","../node_modules/echarts/lib/component/axis/AxisBuilder.js","../node_modules/echarts/lib/component/axis/AxisView.js","../node_modules/echarts/lib/component/axisPointer.js","../node_modules/echarts/lib/component/axisPointer/viewHelper.js","../node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","../node_modules/echarts/lib/component/axisPointer/globalListener.js","../node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","../node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","../node_modules/echarts/lib/visual/symbol.js","../node_modules/echarts/lib/chart/helper/Symbol.js","../node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","../node_modules/echarts/lib/chart/helper/SymbolDraw.js","../node_modules/echarts/lib/chart/helper/labelHelper.js","../node_modules/echarts/lib/component/tooltip.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","../node_modules/echarts/lib/component/helper/listComponent.js","../node_modules/echarts/lib/component/axisPointer/axisTrigger.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","../node_modules/echarts/lib/component/tooltip/TooltipModel.js","../node_modules/echarts/lib/component/tooltip/TooltipView.js","../node_modules/echarts/lib/component/tooltip/TooltipContent.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/chart/helper/createListSimply.js","../node_modules/echarts/lib/visual/dataColor.js","../node_modules/echarts/lib/processor/dataFilter.js","../node_modules/echarts/lib/component/title.js","../node_modules/echarts/lib/chart/helper/LineDraw.js","../node_modules/echarts/lib/chart/helper/Line.js","../node_modules/echarts/lib/component/helper/RoamController.js","../node_modules/echarts/lib/component/helper/selectableMixin.js","../node_modules/echarts/lib/chart/helper/LinePath.js","../node_modules/echarts/lib/component/helper/cursorHelper.js","../node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","../node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","../node_modules/echarts/lib/action/createDataSelectAction.js","../node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","../node_modules/echarts/lib/data/helper/linkList.js","../node_modules/echarts/lib/component/helper/interactionMutex.js","../node_modules/echarts/lib/component/helper/roamHelper.js","../node_modules/echarts/lib/action/roamHelper.js","../node_modules/echarts/lib/coord/View.js","../node_modules/echarts/lib/chart/pie.js","../node_modules/echarts/lib/chart/pie/PieSeries.js","../node_modules/echarts/lib/chart/pie/PieView.js","../node_modules/echarts/lib/chart/pie/pieLayout.js","../node_modules/echarts/lib/chart/pie/labelLayout.js","../node_modules/echarts/lib/chart/funnel.js","../node_modules/echarts/lib/chart/funnel/FunnelSeries.js","../node_modules/echarts/lib/chart/funnel/FunnelView.js","../node_modules/echarts/lib/chart/funnel/funnelLayout.js","../node_modules/echarts/lib/chart/graph.js","../node_modules/echarts/lib/chart/graph/GraphSeries.js","../node_modules/echarts/lib/data/Graph.js","../node_modules/echarts/lib/chart/graph/GraphView.js","../node_modules/echarts/lib/chart/graph/adjustEdge.js","../node_modules/echarts/lib/chart/graph/graphAction.js","../node_modules/echarts/lib/chart/graph/categoryFilter.js","../node_modules/echarts/lib/chart/graph/categoryVisual.js","../node_modules/echarts/lib/chart/graph/edgeVisual.js","../node_modules/echarts/lib/chart/graph/simpleLayout.js","../node_modules/echarts/lib/chart/graph/circularLayout.js","../node_modules/echarts/lib/chart/graph/forceLayout.js","../node_modules/echarts/lib/chart/graph/forceHelper.js","../node_modules/echarts/lib/chart/graph/createView.js"],"names":["webpackJsonp","Array","concat","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default","__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__","__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__","__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__","__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_title__","__WEBPACK_IMPORTED_MODULE_6_echarts_lib_chart_funnel__","__WEBPACK_IMPORTED_MODULE_7_echarts_lib_chart_graph__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","PieReact","_React$Component","this","_this","getPrototypeOf","initPie","bind","_this2","_props$option","option","undefined","myChart","a","init","ID","state","setOption","window","addEventListener","updateSize","resize","_this3","_props","_props$width","width","_props$height","height","createElement","ref","style","Component","exports","collect","ecModel","api","result","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","getComponent","globalAxisPointerModel","linksOption","get","linkGroups","each","getCoordinateSystems","coordSys","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axis","axisPointerModel","model","getModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","type","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","curry","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","zrUtil","clone","labelOption","label","show","tooltipAxisPointerLabelShow","crossStyle","lineStyle","defaults","textStyle","Model","eachSeries","seriesModel","coordinateSystem","seriesTooltipTrigger","seriesTooltipShow","getAxis","dim","push","seriesDataCount","getData","count","axisModel","linkOption","checkPropInLink","id","componentIndex","name","linkPropValue","axisPropValue","isArray","indexOf","fixValue","getAxisInfo","scale","status","parse","extent","getExtent","slice","reverse","isBlank","getAxisPointerModel","makeAxisEventDataBase","eventData","componentType","mainType","endTextLayout","opt","textPosition","textRotate","textAlign","textVerticalAlign","rotationDiff","remRadian","rotation","inverse","onLeft","isRadianAroundZero","PI","isSilent","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","el","ignore","current","next","labelLayout","firstRect","getBoundingRect","nextRect","mRotationBack","matrixUtil","identity","rotate","applyTransform","mul","getLocalTransform","intersect","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","ticksCoords","getTicksCoords","pt1","pt2","matrix","_transform","tickCoord","coord","tickDirection","v2ApplyTransform","tickEl","graphic","Line","subPixelOptimizeLine","anid","tickValue","shape","x1","y1","x2","y2","getLineStyle","stroke","z2","silent","group","add","buildAxisLabel","retrieve","axisLabelShow","labelModel","labelMargin","labels","getViewLabels","labelRotation","labelRotate","innerTextLayout","labelDirection","rawCategoryData","getCategories","triggerEvent","labelItem","index","formattedLabel","rawLabel","itemLabelModel","textColor","getTextColor","dataToCoord","pos","labelOffset","textEl","Text","position","setTextStyle","text","getShallow","textFill","targetType","_dumbGroup","updateTransform","decomposeTransform","_util","extend","formatUtil","_number","_symbol","createSymbol","_vector","Math","AxisBuilder","nameDirection","Group","dumbGroup","transform","hasBuilder","builders","getGroup","axisLine","lineCap","strokeContainThreshold","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","offset","r","sqrt","point","symbol","cos","sin","attr","axisTickLabel","axisName","textStyleModel","gap","gapSignal","nameRotation","axisNameAvailableWidth","abs","isFinite","textFont","getFont","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","truncatedText","truncateText","minChar","placeholder","formatterParams","$vars","__fullText","__truncatedText","tooltip","content","formatter","axisRotation","textRotation","direction","_default","updateAxisPointer","axisView","payload","forceRender","Clazz","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","render","disposeAxisPointer","axisPointer","dispose","_config","echarts","__DEV__","extendComponentView","superApply","arguments","force","remove","axisPointerClazz","registerAxisPointerClass","clazz","axisTrigger","registerPreprocessor","link","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","registerAction","event","update","buildElStyle","axisPointerType","styleModel","fill","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","precision","paddings","normalizeCssArray","font","textRect","textContain","align","verticalAlign","confineInContainer","bgColor","x","y","lineWidth","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","viewWidth","getWidth","viewHeight","getHeight","min","max","seriesDataIndices","getLabel","params","axisHelper","getAxisRawValue","seriesData","idxItem","series","getSeriesByIndex","seriesIndex","dataIndex","dataIndexInside","dataParams","getDataParams","isString","replace","isFunction","getTransformedPosition","layoutInfo","translate","buildCartesianSingleLabelElOption","textLayout","makeLineShape","p1","p2","xDimIndex","makeRectShape","xy","wh","makeSectorShape","cx","cy","r0","startAngle","endAngle","clockwise","finder","data","modelUtil","queryDataIndex","getItemGraphicEl","getTooltipPosition","dataToPoint","getValues","map","dimensions","mapDimension","rect","register","handler","env","node","zr","getZr","inner","records","initGlobalListeners","useHandler","eventType","cb","on","e","dis","makeDispatchAction","record","dispatchAction","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","unregister","_model","makeInner","getCartesian","grid","getAxisDimIndex","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","otherExtent","getOtherAxis","getGlobalExtent","pixelValue","toGlobalCoord","elStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","layout","getHandleTransform","labelInside","updateHandleTransform","delta","axisExtent","dimIndex","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","tooltipOption","line","targetShape","shadow","bandWidth","getBandWidth","span","gridModel","otherAxisOnZeroOf","getAxesOnZeroOf","rawAxisPosition","axisPosition","axisDim","getRect","rectBound","idx","left","right","top","bottom","onZero","axisOffset","posBound","onZeroCoord","dirMap","seriesType","defaultSymbolType","legendSymbol","performRawSeries","reset","dataEach","symbolSize","rawValue","getRawValue","setItemVisual","hasItemOption","itemModel","getItemModel","itemSymbolType","itemSymbolSize","itemSymbolKeepAspect","symbolType","keepAspect","setVisual","symbolKeepAspect","isSeriesFiltered","hasCallback","SymbolClz","seriesScope","updateData","getScale","driftSymbol","dx","dy","parent","drift","parsePercent","_labelHelper","getDefaultLabel","symbolProto","getSymbolSize","getItemVisual","_createSymbol","removeAll","color","symbolPath","culling","_symbolType","stopSymbolAnimation","toLastFrame","childAt","stopAnimation","getSymbolPath","highlight","trigger","downplay","setZ","zlevel","z","setDraggable","draggable","cursor","hostModel","isInit","updateProps","_updateCommon","fadeIn","opacity","initProps","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","getLabelDefaultText","useNameLabel","getName","useStyle","strokeNoScale","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","cursorStyle","getItemStyle","setColor","symbolInnerColor","setStyle","liftZ","z2Origin","__z2Origin","setLabelStyle","labelFetcher","labelDataIndex","defaultText","isRectText","autoColor","off","hoverStyle","setHoverStyle","isAnimationEnabled","onEmphasis","incremental","ratio","animateTo","onNormal","fadeOut","keepLabel","inherits","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","isObject","equals","item","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","traverse","clazzUtil","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","_api","handle","hide","clear","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","animation","isCategoryAxis","useSnap","pointerEl","Rect","handleModel","createIcon","onmousemove","stop","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","createOrUpdate","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","axisIndex","doClear","buildLabel","enableClassExtend","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isNaN","isIgnore","clipShape","contain","normalizeUpdateOpt","makeSeriesScope","symbolDrawProto","oldData","_data","SymbolCtor","diff","newIdx","getItemLayout","symbolEl","setItemGraphicEl","oldIdx","execute","isPersistent","updateLayout","eachItemGraphicEl","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","isGroup","useHoverLayer","start","end","enableAnimation","labelDims","len","retrieveRawValue","vals","val","join","_dataProvider","legendFilter","registerSubTypeDefaulter","isNameSpecified","LegendModel","extendComponentModel","dependencies","layoutMode","ignoreSize","parentModel","mergeDefaultAndTheme","selected","mergeOption","superCall","optionUpdated","_updateData","legendData","hasSelected","isSelected","select","potentialData","availableNames","eachRawSeries","seriesName","isPotential","legendDataProvider","names","mapArray","_availableNames","rawData","dataItem","unSelect","toggleSelected","hasOwnProperty","defaultOption","orient","backgroundColor","borderColor","borderRadius","borderWidth","padding","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","dispatchSelectAction","dispatchHighlightAction","dataName","excludeSeriesId","storage","getDisplayList","dispatchDownplayAction","_listComponent","makeBackground","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","positionInfo","getBoxLayoutParams","viewportSize","maxSize","getLayoutRect","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","createHashMap","selectMode","newline","getSeriesByName","getVisual","legendSymbolType","itemGroup","_createItem","set","indexOfName","itemIcon","tooltipModel","legendGlobalTooltipModel","size","textX","hitRect","invisible","legendIndex","eachChild","child","__legendDataIndex","box","contentRect","componentModel","boxLayoutParams","layoutBox","positionElement","_layout","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","list","updaters","showPointer","showTooltip","coordSysContainsPoint","containPoint","inputAxisInfo","findInputAxisInfo","pointToData","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","containData","buildPayloadsBySeries","payloadBatch","snapToValue","minDist","Number","MAX_VALUE","minDiff","seriesNestestValue","dataIndices","dataDim","getAxisTooltipData","nestestValue","indicesOfNearest","dist","getRawIndex","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisType","axisId","valueLabelOpt","outputAxesInfo","valItem","sampleItem","escapeConnect","lastHighlights","newHighlights","batchItem","toHighlight","toDownplay","batch","AxisPointerModel","triggerOn","animationDurationUpdate","shadowStyle","margin","icon","throttle","globalListener","AxisPointerView","offsetX","offsetY","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","extraCssText","animationEasingUpdate","fontSize","buildTooltipModel","modelCascade","resultModel","pop","isInstance","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","clientWidth","clientHeight","document","defaultView","getComputedStyle","stl","parseInt","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","TooltipContent","numberUtil","axisPointerViewHelper","proxyRect","tooltipContent","getDom","_tooltipContent","wxa","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","clearTimeout","_refreshUpdateTimeout","setTimeout","manuallyShowTip","from","uid","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","hideLater","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","delay","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","formatTooltip","firstLine","encodeHTML","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","random","dataModel","dataType","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","formatTpl","callback","cbTicket","setContent","getSize","vAlign","viewSize","moveTo","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","j","newIdxItem","assembleTransition","duration","transitionText","vendors","vendorPrefix","assembleFont","cssText","round","assembleCssText","canvasSupported","zrColor","toHex","borderName","camelCase","toCamelCase","container","_zr","_x","_y","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","normalizeEvent","dispatch","onmouseleave","_hideDelay","currentStyle","domStyle","display","innerHTML","viewportRootOffset","painter","getViewportRootOffset","offsetLeft","offsetTop","time","isShow","legendSelectActionHandler","methodName","selectedMap","isToggleSelect","eachComponent","isItemSelected","legendModels","findComponents","filterSeries","nameList","coordDimensions","source","getSource","dimensionsInfo","createDimensions","List","initData","getTargetSeries","paletteScope","seiresModelMap","eachSeriesByType","__paletteScope","dataAll","getRawData","idxMap","rawIdx","filteredIdx","singleDataColor","getColorFromPalette","filterSelf","subtext","subtarget","fontWeight","subtextStyle","titleModel","subtextStyleModel","textBaseline","disableBox","subText","subTextEl","sublink","open","groupRect","layoutOption","alignStyle","subPixelOptimizeRect","LineDraw","ctor","_ctor","LineGroup","doAdd","lineDraw","lineData","lineNeedsDraw","doUpdate","oldLineData","newLineData","itemEl","hoverLineStyle","isPointNaN","pt","pts","lineDrawProto","_lineData","_clearIncremental","_incremental","clearDisplaybles","makeSymbolTypeKey","symbolCategory","symbolUtil","createLine","points","LinePath","setLinePoints","cp1","percent","cpx1","cpy1","NaN","updateSymbolAndLabelBeforeLineUpdate","lineGroup","symbolFrom","childOfName","symbolTo","invScale","parentNode","__dirty","fromPos","pointAt","toPos","d","vector","sub","normalize","tangent","tangentAt","atan2","distance","__position","halfPercent","cp","__verticalAlign","__textAlign","_createLine","SYMBOL_CATEGORIES","lineProto","beforeUpdate","linePoints","_updateCommonStl","visualColor","visualOpacity","retrieve3","defaultLabelColor","baseText","showLabel","hoverShowLabel","getFormattedLabel","rawVal","normalText","emphasisText","retrieve2","labelStyle","fontStyle","fontFamily","linePath","dirty","RoamController","pointerChecker","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","Eventful","setPointerChecker","enable","controlType","disable","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","isDragging","isPinching","_pinching","notLeftMouse","checkKeyBinding","gestureEvent","interactionMutex","isTaken","oldX","oldY","wheelDelta","zoomDelta","zoom","pinchScale","pinchX","pinchY","zoomX","zoomY","roamController","prop","setting","mixin","updateSelectedMap","targetList","_targetList","_selectTargetMap","reduce","targetMap","isLine","vec2","straightLineProto","bezierCurveProto","BezierCurve","extendShape","buildPath","ctx","t","p","onIrrelevantElement","targetCoordSysModel","getComponentByElement","topTarget","IRRELEVANT_EXCLUDES","brush","simpleLayout","graph","getGraph","eachNode","setLayout","simpleLayoutEdge","eachEdge","edge","curveness","node1","getLayout","node2","circularLayout","nodeData","angle","sum","getSum","unitAngle","getValue","x12","y12","actionInfos","actionInfo","subType","query","method","nodes","edges","directed","beforeLink","Graph","addNode","linkNameList","validEdges","linkCount","addEdge","createListFromArray","coordSysCtor","CoordinateSystem","dimensionNames","edgeData","linkList","mainData","struct","structAttr","datas","datasAttr","main","linkAll","TRANSFERABLE_METHODS","wrapMethod","transferInjection","cloneShallowInjection","CHANGABLE_METHODS","changeInjection","assert","res","isMainData","DATAS","linkSingle","MAIN_DATA","cloneShallow","getLinkedData","take","resourceKey","userKey","getStore","release","store","ATTR","updateViewOnPan","controllerHost","updateViewOnZoom","zoomLimit","newZoom","zoomMin","zoomMax","Infinity","zoomScale","updateCenterAndZoom","view","previousZoom","getZoom","center","getCenter","setCenter","fixX","originX","fixY","originY","setZoom","TransformDummy","Transformable","View","_roamTransformable","_rawTransformable","_center","_zoom","doConvert","BoundingRect","setBoundingRect","_rect","setViewRect","transformTo","_viewRect","rawTransform","calculateTransform","_updateTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getRoamTransform","rawTransformMatrix","roamTransform","defaultCenter","origin","roamTransformable","rawTransformable","copy","_rawTransform","invTransform","invert","getViewRect","getViewRectAfterRoam","noRoam","out","convertToPixel","convertFromPixel","createDataSelectAction","dataColor","pieLayout","dataFilter","registerVisual","registerLayout","createListSimply","getPercentWithPrecision","dataSelectableMixin","retrieveRawAttr","PieSeries","extendSeriesModel","_createSelectableList","_defaultLabelLine","newOption","getInitialData","valueDim","valueList","defaultEmphasis","labelLineNormalOpt","labelLine","labelLineEmphasisOpt","emphasis","legendHoverLink","radius","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","length2","smooth","animationType","animationEasing","updateDataSelected","hasAnimation","seriesId","toggleItemSelected","midAngle","animate","when","PiePiece","polyline","hoverIgnore","normalIgnore","sector","Sector","Polyline","ChartView","piePieceProto","firstCreate","sectorShape","setShape","lineJoin","_updateLabel","labelText","labelHoverModel","labelLineModel","labelLineHoverModel","useInsideStyle","inside","PieView","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","piePiece","removeClipPath","setClipPath","_createClipPath","clipPath","itemLayout","RADIAN","validDataCount","unitRadian","roseType","getDataExtent","restAngle","PI2","valueSumLargerThanMinAngle","currentAngle","dir","setItemLayout","linearMap","adjustSingleSide","shiftUp","changeX","isDownList","lastDeltaX","l","deltaY","len2","deltaX","sort","b","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","textY","labelPosition","labelLineLen","labelLineLen2","isLabelInside","x3","y3","funnelLayout","FunnelSeries","toFixed","minSize","funnelAlign","FunnelPiece","polygon","Polygon","funnelPieceProto","opacityAccessPath","itemStyleModel","FunnelView","funnelPiece","getSortedIndices","valueArr","indices","isAscending","viewRect","sizeExtent","dataExtent","getLinePoints","offY","x0","nextIdx","categoryFilter","visualSymbol","categoryVisual","edgeVisual","forceLayout","createView","registerCoordinateSystem","_format","createGraphFromNodeEdge","GraphSeries","_categoriesData","fillDataTextStyle","links","_updateCategoriesData","edgeGetParent","path","parsePath","fakeSeriesModel","emphasisFakeSeriesModel","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","emphasisEdgeLabelModel","customizeGetParent","getEdgeData","getCategoriesData","multipleSeries","getEdgeByIndex","sourceName","targetName","categories","category","categoriesData","focusNodeAdjacency","circular","rotateLabel","initLayout","repulsion","gravity","edgeLength","layoutAnimation","edgeSymbol","edgeSymbolSize","edgeLabel","roam","nodeScaleRatio","generateNodeKey","Node","inEdges","outEdges","hostGraph","Edge","n1","n2","_clazz","enableClassCheck","_directed","_nodesMap","_edgesMap","graphProto","isDirected","nodesMap","getNodeByIndex","getNodeById","edgesMap","getEdge","context","breadthFirstTraverse","startNode","edgeType","__visited","queue","currentNode","shift","otherNode","degree","inDegree","outDegree","createGraphDataProxyMixin","hostName","dimension","getDimension","ignoreParent","merge","getGraphicEl","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","fadeInItem","roamHelper","_cursorHelper","adjustEdge","nodeOpacityPath","lineOpacityPath","extendChartView","symbolDraw","_controller","_controllerHost","_symbolDraw","_lineDraw","_firstRender","_nodeScaleRatio","groupNewProp","_getNodeGlobalScale","_updateNodeAndLinkScale","_updateController","_layoutTimeout","_startForceLayoutIteration","warmUp","_layouting","setFixed","setUnfixed","__focusNodeAdjacency","__unfocusNodeAdjacency","edgeDataIndex","circularRotateLabel","rad","isLeft","textOrigin","adjacentEdge","unfocusNodeAdjacency","step","stopped","controller","mouseX","mouseY","nodeScale","groupScale","groupZoom","intersectCurveCircle","curvePoints","p0","radiusSquare","interval","_t","v1","quadraticAt","mathAbs","v2DistSquare","v2","v3","nextDiff","tmp0","quadraticSubdivide","curveTool","pts2","v","fromSymbol","toSymbol","__original","originalPoints","scaleAndAdd","distSquare","_roamHelper","graphSeries","categoryNames","categoryNameIdxMap","colorQuery","split","opacityQuery","coordDim","hasValue","_simpleLayoutHelper","_circularLayoutHelper","preservedPoints","forceModel","getId","nodeDataExtent","edgeDataExtent","rep","w","fixed","forceInstance","oldStep","_forceHelper","opts","pp","friction","v12","nLen","repFact","aspect","viewList","positions","bbox","fromPoints","bbWidth","bbHeight","viewCoordSys"],"mappings":"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","file":"static/js/PieReact.22c3ec48.chunk.js","sourcesContent":["webpackJsonp([2],Array(166).concat([\n/* 166 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__ = __webpack_require__(75);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__ = __webpack_require__(191);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__ = __webpack_require__(192);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__ = __webpack_require__(258);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_title__ = __webpack_require__(219);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_title___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_title__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_echarts_lib_chart_funnel__ = __webpack_require__(263);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_echarts_lib_chart_funnel___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_echarts_lib_chart_funnel__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_echarts_lib_chart_graph__ = __webpack_require__(267);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_echarts_lib_chart_graph___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_echarts_lib_chart_graph__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**\r\n * Created by yongyuehuang on 2017/8/5.\r\n *///必须\nvar PieReact=function(_React$Component){_inherits(PieReact,_React$Component);function PieReact(props){_classCallCheck(this,PieReact);var _this=_possibleConstructorReturn(this,(PieReact.__proto__||Object.getPrototypeOf(PieReact)).call(this,props));_this.initPie=_this.initPie.bind(_this);return _this;}_createClass(PieReact,[{key:'initPie',value:function initPie(){var _this2=this;var _props$option=this.props.option,option=_props$option===undefined?{}:_props$option;//外部传入的data数据\nvar myChart=__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a.init(this.ID);//初始化echarts\nthis.state={myChart:myChart};//设置options\nmyChart.setOption(option);//a.push(myChart);\n// setword(myChart);\nwindow.addEventListener('resize',function(){return _this2.updateSize();});}},{key:'updateSize',value:function updateSize(){this.state.myChart.resize();}},{key:'componentDidMount',value:function componentDidMount(){this.initPie();}},{key:'componentDidUpdate',value:function componentDidUpdate(){this.initPie();}},{key:'render',value:function render(){var _this3=this;var _props=this.props,_props$width=_props.width,width=_props$width===undefined?\"100%\":_props$width,_props$height=_props.height,height=_props$height===undefined?'100%':_props$height;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{ref:function ref(ID){return _this3.ID=ID;},style:{width:width,height:height}});}}]);return PieReact;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);/* harmony default export */ __webpack_exports__[\"default\"] = (PieReact);\n\n/***/ }),\n/* 167 */,\n/* 168 */,\n/* 169 */,\n/* 170 */,\n/* 171 */,\n/* 172 */,\n/* 173 */,\n/* 174 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Model = __webpack_require__(12);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n/* 175 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(0);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(9);\n\nvar graphic = __webpack_require__(11);\n\nvar Model = __webpack_require__(12);\n\nvar _number = __webpack_require__(5);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(76);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(18);\n\nvar _vector = __webpack_require__(2);\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n/* 176 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(6);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(75);\n\nvar axisPointerModelHelper = __webpack_require__(174);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n/* 177 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\nvar zrUtil = __webpack_require__(0);\n\nvar axisPointerModelHelper = __webpack_require__(174);\n\nvar axisTrigger = __webpack_require__(198);\n\n__webpack_require__(199);\n\n__webpack_require__(200);\n\n__webpack_require__(182);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n/* 178 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(11);\n\nvar textContain = __webpack_require__(14);\n\nvar formatUtil = __webpack_require__(9);\n\nvar matrix = __webpack_require__(18);\n\nvar axisHelper = __webpack_require__(30);\n\nvar AxisBuilder = __webpack_require__(175);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n/* 179 */,\n/* 180 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar modelUtil = __webpack_require__(1);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 181 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar env = __webpack_require__(7);\n\nvar _model = __webpack_require__(1);\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n/* 182 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(11);\n\nvar BaseAxisPointer = __webpack_require__(187);\n\nvar viewHelper = __webpack_require__(178);\n\nvar cartesianAxisHelper = __webpack_require__(183);\n\nvar AxisView = __webpack_require__(176);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n/* 183 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n/* 184 */\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize,\n        symbolKeepAspect: keepAspect\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 185 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar _symbol = __webpack_require__(76);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(11);\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = __webpack_require__(189);\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n/***/ }),\n/* 186 */,\n/* 187 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar clazzUtil = __webpack_require__(8);\n\nvar graphic = __webpack_require__(11);\n\nvar axisPointerModelHelper = __webpack_require__(174);\n\nvar eventTool = __webpack_require__(31);\n\nvar throttleUtil = __webpack_require__(43);\n\nvar _model = __webpack_require__(1);\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n/* 188 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(11);\n\nvar SymbolClz = __webpack_require__(185);\n\nvar _util = __webpack_require__(0);\n\nvar isObject = _util.isObject;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _dataProvider = __webpack_require__(21);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;\n\n/***/ }),\n/* 190 */,\n/* 191 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\n__webpack_require__(177);\n\n__webpack_require__(201);\n\n__webpack_require__(202);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\n__webpack_require__(193);\n\n__webpack_require__(204);\n\n__webpack_require__(194);\n\nvar legendFilter = __webpack_require__(205);\n\nvar Component = __webpack_require__(13);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n/* 193 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\nvar zrUtil = __webpack_require__(0);\n\nvar Model = __webpack_require__(12);\n\nvar _model = __webpack_require__(1);\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(6);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(75);\n\nvar zrUtil = __webpack_require__(0);\n\nvar _symbol = __webpack_require__(76);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(11);\n\nvar _listComponent = __webpack_require__(195);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(29);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _layout = __webpack_require__(29);\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = __webpack_require__(9);\n\nvar graphic = __webpack_require__(11);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n/***/ }),\n/* 196 */,\n/* 197 */,\n/* 198 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar _model = __webpack_require__(1);\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = __webpack_require__(174);\n\nvar findPointFromSeries = __webpack_require__(180);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 199 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 200 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\nvar globalListener = __webpack_require__(181);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n/* 201 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 202 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\nvar zrUtil = __webpack_require__(0);\n\nvar env = __webpack_require__(7);\n\nvar TooltipContent = __webpack_require__(203);\n\nvar formatUtil = __webpack_require__(9);\n\nvar numberUtil = __webpack_require__(5);\n\nvar graphic = __webpack_require__(11);\n\nvar findPointFromSeries = __webpack_require__(180);\n\nvar layoutUtil = __webpack_require__(29);\n\nvar Model = __webpack_require__(12);\n\nvar globalListener = __webpack_require__(181);\n\nvar axisHelper = __webpack_require__(30);\n\nvar axisPointerViewHelper = __webpack_require__(178);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 203 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar zrColor = __webpack_require__(19);\n\nvar eventUtil = __webpack_require__(31);\n\nvar env = __webpack_require__(7);\n\nvar formatUtil = __webpack_require__(9);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n/* 204 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\nvar zrUtil = __webpack_require__(0);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n/* 205 */\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 206 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createDimensions = __webpack_require__(45);\n\nvar List = __webpack_require__(41);\n\nvar _util = __webpack_require__(0);\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 207 */,\n/* 208 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(0);\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 209 */,\n/* 210 */,\n/* 211 */,\n/* 212 */,\n/* 213 */,\n/* 214 */,\n/* 215 */,\n/* 216 */\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 217 */,\n/* 218 */,\n/* 219 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\nvar graphic = __webpack_require__(11);\n\nvar _layout = __webpack_require__(29);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n/***/ }),\n/* 220 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(11);\n\nvar LineGroup = __webpack_require__(221);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n  if (!lineData) {\n    return;\n  }\n\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n      lineData.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;\n\n/***/ }),\n/* 221 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar vector = __webpack_require__(2);\n\nvar symbolUtil = __webpack_require__(76);\n\nvar LinePath = __webpack_require__(229);\n\nvar graphic = __webpack_require__(11);\n\nvar _number = __webpack_require__(5);\n\nvar round = _number.round;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var baseText; // FIXME: the logic below probably should be merged to `graphic.setLabelStyle`.\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    baseText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (baseText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      baseText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n  }\n\n  var normalText = showLabel ? baseText : null;\n  var emphasisText = hoverShowLabel ? zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), baseText) : null;\n  var labelStyle = label.style; // Always set `textStyle` even if `normalStyle.text` is null, because default\n  // values have to be set on `normalStyle`.\n\n  if (normalText != null || emphasisText != null) {\n    graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  }\n\n  if (emphasisText != null) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;\n\n/***/ }),\n/* 222 */,\n/* 223 */,\n/* 224 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Eventful = __webpack_require__(15);\n\nvar eventTool = __webpack_require__(31);\n\nvar interactionMutex = __webpack_require__(251);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;\n\n/***/ }),\n/* 225 */,\n/* 226 */,\n/* 227 */,\n/* 228 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 229 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(11);\n\nvar vec2 = __webpack_require__(2);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 230 */\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n/***/ }),\n/* 231 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(2);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;\n\n/***/ }),\n/* 232 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(2);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;\n\n/***/ }),\n/* 233 */,\n/* 234 */,\n/* 235 */,\n/* 236 */,\n/* 237 */,\n/* 238 */,\n/* 239 */,\n/* 240 */,\n/* 241 */,\n/* 242 */,\n/* 243 */,\n/* 244 */,\n/* 245 */,\n/* 246 */,\n/* 247 */,\n/* 248 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\nvar zrUtil = __webpack_require__(0);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 249 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar List = __webpack_require__(41);\n\nvar Graph = __webpack_require__(269);\n\nvar linkList = __webpack_require__(250);\n\nvar createDimensions = __webpack_require__(45);\n\nvar CoordinateSystem = __webpack_require__(42);\n\nvar createListFromArray = __webpack_require__(78);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    var coordSysCtor = CoordinateSystem.get(coordSys);\n    var coordDimensions = coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []; // FIXME: Some geo do not need `value` dimenson, whereas `calendar` needs\n    // `value` dimension, but graph need `value` dimension. It's better to\n    // uniform this behavior.\n\n    if (zrUtil.indexOf(coordDimensions, 'value') < 0) {\n      coordDimensions.concat(['value']);\n    }\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: coordDimensions\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 250 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;\n\n/***/ }),\n/* 251 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n/***/ }),\n/* 252 */\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;\n\n/***/ }),\n/* 253 */\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;\n\n/***/ }),\n/* 254 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar vector = __webpack_require__(2);\n\nvar matrix = __webpack_require__(18);\n\nvar BoundingRect = __webpack_require__(4);\n\nvar Transformable = __webpack_require__(49);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;\n\n/***/ }),\n/* 255 */,\n/* 256 */,\n/* 257 */,\n/* 258 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\nvar zrUtil = __webpack_require__(0);\n\n__webpack_require__(259);\n\n__webpack_require__(260);\n\nvar createDataSelectAction = __webpack_require__(248);\n\nvar dataColor = __webpack_require__(208);\n\nvar pieLayout = __webpack_require__(261);\n\nvar dataFilter = __webpack_require__(216);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));\n\n/***/ }),\n/* 259 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\nvar createListSimply = __webpack_require__(206);\n\nvar zrUtil = __webpack_require__(0);\n\nvar modelUtil = __webpack_require__(1);\n\nvar _number = __webpack_require__(5);\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = __webpack_require__(228);\n\nvar _dataProvider = __webpack_require__(21);\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n/***/ }),\n/* 260 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar graphic = __webpack_require__(11);\n\nvar ChartView = __webpack_require__(79);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n/***/ }),\n/* 261 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = __webpack_require__(262);\n\nvar zrUtil = __webpack_require__(0);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 262 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(14);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 263 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\n__webpack_require__(264);\n\n__webpack_require__(265);\n\nvar dataColor = __webpack_require__(208);\n\nvar funnelLayout = __webpack_require__(266);\n\nvar dataFilter = __webpack_require__(216);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));\n\n/***/ }),\n/* 264 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\nvar createListSimply = __webpack_require__(206);\n\nvar _model = __webpack_require__(1);\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;\n\n/***/ }),\n/* 265 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(11);\n\nvar zrUtil = __webpack_require__(0);\n\nvar ChartView = __webpack_require__(79);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;\n\n/***/ }),\n/* 266 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar layout = __webpack_require__(29);\n\nvar _number = __webpack_require__(5);\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 267 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\n__webpack_require__(268);\n\n__webpack_require__(270);\n\n__webpack_require__(272);\n\nvar categoryFilter = __webpack_require__(273);\n\nvar visualSymbol = __webpack_require__(184);\n\nvar categoryVisual = __webpack_require__(274);\n\nvar edgeVisual = __webpack_require__(275);\n\nvar simpleLayout = __webpack_require__(276);\n\nvar circularLayout = __webpack_require__(277);\n\nvar forceLayout = __webpack_require__(278);\n\nvar createView = __webpack_require__(280);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});\n\n/***/ }),\n/* 268 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\nvar List = __webpack_require__(41);\n\nvar zrUtil = __webpack_require__(0);\n\nvar _model = __webpack_require__(1);\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = __webpack_require__(12);\n\nvar _format = __webpack_require__(9);\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = __webpack_require__(249);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      var emphasisEdgeLabelModel = self.getModel('emphasis.edgeLabel');\n      var emphasisFakeSeriesModel = new Model({\n        emphasis: {\n          label: emphasisEdgeLabelModel.option\n        }\n      }, emphasisEdgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : path && path[0] === 'emphasis' && path[1] === 'label' ? emphasisFakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;\n\n/***/ }),\n/* 269 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(6);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(0);\n\nvar _clazz = __webpack_require__(8);\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;\n\n/***/ }),\n/* 270 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\nvar zrUtil = __webpack_require__(0);\n\nvar SymbolDraw = __webpack_require__(188);\n\nvar LineDraw = __webpack_require__(220);\n\nvar RoamController = __webpack_require__(224);\n\nvar roamHelper = __webpack_require__(252);\n\nvar _cursorHelper = __webpack_require__(230);\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = __webpack_require__(11);\n\nvar adjustEdge = __webpack_require__(271);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 271 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curveTool = __webpack_require__(10);\n\nvar vec2 = __webpack_require__(2);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 272 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(75);\n\nvar _roamHelper = __webpack_require__(253);\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});\n\n/***/ }),\n/* 273 */\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 274 */\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 275 */\n/***/ (function(module, exports) {\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 276 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(0);\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = __webpack_require__(231);\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 277 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _circularLayoutHelper = __webpack_require__(232);\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 278 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _forceHelper = __webpack_require__(279);\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = __webpack_require__(231);\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = __webpack_require__(232);\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = __webpack_require__(5);\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = __webpack_require__(2);\n\nvar zrUtil = __webpack_require__(0);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 279 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(2);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;\n\n/***/ }),\n/* 280 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar View = __webpack_require__(254);\n\nvar _layout = __webpack_require__(29);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = __webpack_require__(51);\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// static/js/PieReact.22c3ec48.chunk.js","/**\r\n * Created by yongyuehuang on 2017/8/5.\r\n */\r\nimport React from 'react'\r\nimport echarts from 'echarts/lib/echarts' //必须\r\nimport 'echarts/lib/component/tooltip'\r\nimport 'echarts/lib/component/legend'\r\nimport 'echarts/lib/chart/pie'\r\nimport 'echarts/lib/component/title'\r\nimport 'echarts/lib/chart/funnel'\r\nimport 'echarts/lib/chart/graph'\r\n\r\nexport default class PieReact extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props)\r\n    this.initPie = this.initPie.bind(this)\r\n  }\r\n  \r\n  initPie() {\r\n    const { option={} } = this.props //外部传入的data数据\r\n    let myChart = echarts.init(this.ID) //初始化echarts\r\n    this.state = {myChart :myChart};\r\n    \r\n    //设置options\r\n    myChart.setOption(option)\r\n    //a.push(myChart);\r\n    // setword(myChart);\r\n    window.addEventListener('resize', () => this.updateSize());\r\n  }\r\n  \r\n  updateSize(){\r\n    this.state.myChart.resize()\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.initPie()\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    this.initPie()\r\n  }\r\n  \r\n  render() {\r\n    const { width=\"100%\", height = '100%' } = this.props\r\n    return <div ref={ID => this.ID = ID} style={{width, height}}></div>\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/EchartsDemo/PieReact.js","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 174\n// module chunks = 0 1 2 3 4 5","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisBuilder.js\n// module id = 175\n// module chunks = 0 1 2 3 4 5","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisView.js\n// module id = 176\n// module chunks = 0 1 2 3 4 5","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer.js\n// module id = 177\n// module chunks = 0 1 2 3 4 5","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 178\n// module chunks = 0 1 2 3 4 5","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 180\n// module chunks = 0 1 2 3 4 5","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/globalListener.js\n// module id = 181\n// module chunks = 0 1 2 3 4 5","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 182\n// module chunks = 0 1 2 3 4 5","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js\n// module id = 183\n// module chunks = 0 1 2 3 4 5","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize,\n        symbolKeepAspect: keepAspect\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/symbol.js\n// module id = 184\n// module chunks = 1 2 3 4 5","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/Symbol.js\n// module id = 185\n// module chunks = 1 2 3 4 5","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 187\n// module chunks = 0 1 2 3 4 5","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 188\n// module chunks = 1 2 3 4 5","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/labelHelper.js\n// module id = 189\n// module chunks = 1 2 3 4 5","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip.js\n// module id = 191\n// module chunks = 0 1 2 3 4 5","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 192\n// module chunks = 0 1 2 3 4 5","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 193\n// module chunks = 0 1 2 3 4 5","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 194\n// module chunks = 0 1 2 3 4 5","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/listComponent.js\n// module id = 195\n// module chunks = 0 1 2 3 4 5","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 198\n// module chunks = 0 1 2 3 4 5","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 199\n// module chunks = 0 1 2 3 4 5","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 200\n// module chunks = 0 1 2 3 4 5","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 201\n// module chunks = 0 1 2 3 4 5","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipView.js\n// module id = 202\n// module chunks = 0 1 2 3 4 5","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 203\n// module chunks = 0 1 2 3 4 5","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 204\n// module chunks = 0 1 2 3 4 5","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 205\n// module chunks = 0 1 2 3 4 5","var createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createListSimply.js\n// module id = 206\n// module chunks = 0 1 2","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/dataColor.js\n// module id = 208\n// module chunks = 0 1 2","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataFilter.js\n// module id = 216\n// module chunks = 1 2","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/title.js\n// module id = 219\n// module chunks = 1 2 3 4","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n  if (!lineData) {\n    return;\n  }\n\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n      lineData.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/LineDraw.js\n// module id = 220\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var baseText; // FIXME: the logic below probably should be merged to `graphic.setLabelStyle`.\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    baseText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (baseText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      baseText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n  }\n\n  var normalText = showLabel ? baseText : null;\n  var emphasisText = hoverShowLabel ? zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), baseText) : null;\n  var labelStyle = label.style; // Always set `textStyle` even if `normalStyle.text` is null, because default\n  // values have to be set on `normalStyle`.\n\n  if (normalText != null || emphasisText != null) {\n    graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  }\n\n  if (emphasisText != null) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/Line.js\n// module id = 221\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/RoamController.js\n// module id = 224\n// module chunks = 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/selectableMixin.js\n// module id = 228\n// module chunks = 1 2","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/LinePath.js\n// module id = 229\n// module chunks = 0 1 2","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/cursorHelper.js\n// module id = 230\n// module chunks = 1 2","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js\n// module id = 231\n// module chunks = 1 2","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/circularLayoutHelper.js\n// module id = 232\n// module chunks = 1 2","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/createDataSelectAction.js\n// module id = 248\n// module chunks = 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    var coordSysCtor = CoordinateSystem.get(coordSys);\n    var coordDimensions = coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []; // FIXME: Some geo do not need `value` dimenson, whereas `calendar` needs\n    // `value` dimension, but graph need `value` dimension. It's better to\n    // uniform this behavior.\n\n    if (zrUtil.indexOf(coordDimensions, 'value') < 0) {\n      coordDimensions.concat(['value']);\n    }\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: coordDimensions\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js\n// module id = 249\n// module chunks = 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/linkList.js\n// module id = 250\n// module chunks = 1 2","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/interactionMutex.js\n// module id = 251\n// module chunks = 1 2","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/roamHelper.js\n// module id = 252\n// module chunks = 1 2","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/roamHelper.js\n// module id = 253\n// module chunks = 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/View.js\n// module id = 254\n// module chunks = 1 2","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie.js\n// module id = 258\n// module chunks = 1 2","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieSeries.js\n// module id = 259\n// module chunks = 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieView.js\n// module id = 260\n// module chunks = 1 2","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/pieLayout.js\n// module id = 261\n// module chunks = 1 2","var textContain = require(\"zrender/lib/contain/text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/labelLayout.js\n// module id = 262\n// module chunks = 1 2","var echarts = require(\"../echarts\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/funnel.js\n// module id = 263\n// module chunks = 1 2","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/funnel/FunnelSeries.js\n// module id = 264\n// module chunks = 1 2","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/funnel/FunnelView.js\n// module id = 265\n// module chunks = 1 2","var layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/funnel/funnelLayout.js\n// module id = 266\n// module chunks = 1 2","var echarts = require(\"../echarts\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph.js\n// module id = 267\n// module chunks = 1 2","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      var emphasisEdgeLabelModel = self.getModel('emphasis.edgeLabel');\n      var emphasisFakeSeriesModel = new Model({\n        emphasis: {\n          label: emphasisEdgeLabelModel.option\n        }\n      }, emphasisEdgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : path && path[0] === 'emphasis' && path[1] === 'label' ? emphasisFakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/GraphSeries.js\n// module id = 268\n// module chunks = 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/Graph.js\n// module id = 269\n// module chunks = 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/GraphView.js\n// module id = 270\n// module chunks = 1 2","var curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/adjustEdge.js\n// module id = 271\n// module chunks = 1 2","var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/graphAction.js\n// module id = 272\n// module chunks = 1 2","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/categoryFilter.js\n// module id = 273\n// module chunks = 1 2","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/categoryVisual.js\n// module id = 274\n// module chunks = 1 2","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/edgeVisual.js\n// module id = 275\n// module chunks = 1 2","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/simpleLayout.js\n// module id = 276\n// module chunks = 1 2","var _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/circularLayout.js\n// module id = 277\n// module chunks = 1 2","var _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/forceLayout.js\n// module id = 278\n// module chunks = 1 2","var vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/forceHelper.js\n// module id = 279\n// module chunks = 1 2","var View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/graph/createView.js\n// module id = 280\n// module chunks = 1 2"],"sourceRoot":""}